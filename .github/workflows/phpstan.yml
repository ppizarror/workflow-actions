name: PHP Static Analysis

on:
  workflow_call:
    inputs:
      configuration:
        description: "Path of the configuration file"
        required: false
        type: string
      composer:
        description: "Path of composer.json file within root project folder"
        required: true
        type: string
      memory:
        default: "512M"
        description: "Memory limit"
        required: false
        type: string
      path:
        description: "Which path of the project to scan for"
        required: true
        type: string
      php:
        default: "8.3"
        description: "PHP version to use"
        required: false
        type: string

jobs:
  analyze:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Filter changed files on path
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            path:
              - '${{ inputs.path }}**'

      - name: Install PHP
        if: ${{ steps.filter.outputs.path == 'true' }}
        uses: shivammathur/setup-php@v2
        with:
          coverage: none
          php-version: ${{ inputs.php }}
          tools: none

      - name: Install composer
        if: ${{ steps.filter.outputs.path == 'true' }}
        uses: php-actions/composer@v6
        with:
          version: 2.8.1
          working_dir: ${{ inputs.composer }}

      - name: Run phpstan
        if: ${{ steps.filter.outputs.path == 'true' }}
        shell: bash
        run: |
          # Define the paths based on inputs.
          phpstan_bin="${{ inputs.composer }}/vendor/bin/phpstan"
          phpstan_cfg="${{ inputs.configuration }}"
          target_path="${{ inputs.path }}"
          
          # Validate
          if [ ! -f "$phpstan_bin" ]; then
            echo "Error: PHPStan binary not found at $phpstan_bin"
            exit 1
          fi
          if [ ! -f "$phpstan_cfg" ]; then
            echo "Error: PHPStan configuration file not found at $phpstan_cfg"
            exit 1
          fi
          if [ ! -e "$target_path" ]; then
            echo "Error: Target path not found: $target_path"
            exit 1
          fi
          
          # Run script
          "$phpstan_bin" analyze -c "$phpstan_cfg" "$target_path" --memory-limit ${{ inputs.memory }}